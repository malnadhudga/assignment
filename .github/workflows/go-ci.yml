name: Go CI for main.go

on:
  push:
    branches:
      -  # Run on pushes to the main branch
  pull_request:
    branches:
      - main # Run on pull requests targeting the main branch

# Define the jobs to be executed
jobs:
  build-and-test:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest # A fresh Ubuntu virtual machine for each run

    # Define the steps for this job
    steps:
      - name: Checkout code
        # Action to checkout your repository code
        uses: actions/checkout@v4

      - name: Set up Go environment
        # Action to set up the Go environment
        uses: actions/setup-go@v5
        with:
          go-version: '1.22' # Specify the Go version you're using (e.g., '1.22', '1.21')
          # This will cache Go modules for faster builds
          cache: true

      - name: Download Go modules (if go.mod exists)
        # Run 'go mod download' to fetch dependencies. This is safe even if you have no dependencies.
        run: go mod download

      - name: Build Go application
        # Build your main.go file.
        # If your main.go is directly in the root, the output will be 'your-repo-name'
        # If you have a specific output name, use go build -o myappname .
        run: go build .

      - name: Run Go tests (if any tests exist)
        # Run all tests in your project. If you don't have tests, this will still pass.
        # It's good practice to include this for future test additions.
        run: go test -v ./...

      - name: Run Go vet (static analysis for common errors)
        # go vet examines Go source code and reports suspicious constructs.
        run: go vet ./...